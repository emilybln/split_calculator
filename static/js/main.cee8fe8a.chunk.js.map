{"version":3,"sources":["components/styles.ts","redux/reducers/listsReducers.ts","redux/reducers/rootReducers.tsx","components/lists/styles.ts","components/lists/ListItem.tsx","selectors/listsSelector.ts","components/lists/Lists.tsx","components/input-add-new-list/styles.ts","components/input-add-new-list/InputAddNewList.tsx","components/Home.tsx","components/page-details-list/styles.ts","components/page-details-list/PageDetailsList.tsx","hooks/useCurrentListInfo.ts","App.tsx","index.tsx","configureStore.ts"],"names":["header","css","margin","rem","display","flexFlow","justifyContent","alignItems","section","marginTop","flexDirection","title","fontSize","color","fontWeight","marginBottom","fontFamily","subtitle","backgroundColor","borderRadius","height","padding","width","border","paddingLeft","marginRight","borderColor","listStyleType","textDecoration","slice","createSlice","name","initialState","lists","reducers","addList","state","action","payload","removeList","filter","list","id","addParticipant","index","findIndex","actions","rootReducer","combineReducers","listsReducers","useTypedSelector","createSelectorHook","listItem","listLink","buttonLink","ListItem","history","useHistory","useDispatch","amount","participants","styles","type","onClick","push","length","selectLists","console","log","Lists","dispatch","map","key","e","listOfLists","addListTitle","addListInput","listNameInput","addButton","InputAddNewList","listsLength","useState","listTitle","setListTitle","value","onChange","target","placeholder","Math","floor","random","isSelected","Home","participantsSection","participantInput","backButton","PageDetailsList","targetId","useParams","newParticipant","setNewParticipant","currentList","Number","find","teeest","join","goBack","concat","App","store","Fragment","exact","path","configureStore","reducer","rootReducers","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cee8fe8a.chunk.js","sourcesContent":["import { rem, size } from 'polished'\nimport { css } from '@emotion/react'\n\nexport const header = css({\n  margin: rem(24),\n  display: 'flex',\n  flexFlow: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n})\n\nexport const section = css({\n  marginTop: rem(54),\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n})\n\nexport const title = css({\n  fontSize: rem(88),\n  color: '#424242',\n  fontWeight: 800,\n  marginBottom: rem(16),\n  fontFamily: 'Lexend',\n})\n\nexport const subtitle = css({\n  fontSize: rem(24),\n  color: '#C4C4C4',\n  fontFamily: 'Roboto',\n  fontWeight: 400,\n})\n\n/// /////\n\nexport const listOfLists = css({\n  backgroundColor: '#FFFFFF',\n  borderRadius: rem(4),\n  margin: `${rem(20)} auto`,\n  height: '100%',\n  padding: rem(24),\n  width: rem(630),\n})\n\nexport const addListTitle = css({\n  fontSize: rem(17),\n  color: '#424242',\n  fontFamily: 'Roboto',\n  fontWeight: 500,\n  marginBottom: rem(16),\n})\n\nexport const addListInput = css({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n})\n\nexport const listNameInput = css({\n  height: rem(42),\n  borderRadius: rem(4),\n  border: `${rem(1)} solid #ebebeb`,\n  paddingLeft: rem(16),\n  width: '100%',\n  marginRight: rem(24),\n  fontSize: rem(17),\n  '::placeholder': {\n    color: '#ebebeb',\n  },\n})\n\nexport const addButton = css({\n  height: rem(38),\n  width: rem(42),\n  borderRadius: '100%',\n  backgroundColor: '#484ED9',\n  borderColor: 'transparent',\n  color: '#ffffff',\n  fontSize: rem(24),\n  fontWeight: 600,\n})\n\n///\n\nexport const lists = css({\n  listStyleType: 'none',\n  padding: rem(0),\n  margin: rem(0),\n})\n\nexport const listItem = css({\n  fontSize: rem(17),\n  color: '#424242',\n  fontWeight: 500,\n  margin: `0 auto ${rem(8)}`,\n  display: 'flex',\n  justifyContent: 'space-between',\n  backgroundColor: '#FFFFFF',\n  borderRadius: rem(4),\n  height: '100%',\n  padding: rem(24),\n  width: rem(630),\n})\n\nexport const listLink = css({\n  fontSize: rem(17),\n  color: '#424242',\n  fontWeight: 300,\n  textDecoration: 'none',\n  ':hover': {\n    color: '#484ED9',\n    fontWeight: 500,\n  },\n})\n\nexport const buttonLink = css({\n  fontSize: rem(15),\n  color: '#ebebeb',\n  fontWeight: 300,\n  textDecoration: 'none',\n  backgroundColor: 'transparent',\n  border: 'none',\n  ':hover': {\n    color: 'red',\n  },\n})\n","import { createSlice, current, PayloadAction } from '@reduxjs/toolkit'\nimport { IList } from '../../interface/list'\nimport { participantInput } from '../../components/page-details-list/styles'\n\nexport interface IAllListsState {\n  lists: IList[]\n}\n\nconst initialState: IAllListsState = {\n  lists: [],\n}\n\nconst slice = createSlice({\n  name: 'allLists',\n  initialState,\n  reducers: {\n    addList: (state: IAllListsState, action: PayloadAction<IList>): void => {\n      // eslint-disable-next-line no-param-reassign\n      state.lists = [...state.lists, action.payload]\n    },\n    removeList: (state: IAllListsState, action: PayloadAction<number>): void => {\n      // eslint-disable-next-line no-param-reassign\n      state.lists = state.lists.filter((list) => list.id !== action.payload)\n    },\n    addParticipant: (state: IAllListsState, action: PayloadAction<IList>): void => {\n      const index = state.lists.findIndex((list) => list.id === action.payload.id)\n      // eslint-disable-next-line no-param-reassign\n      state.lists[index] = action.payload\n      // eslint-disable-next-line no-param-reassign\n      state.lists = [...state.lists]\n    },\n  },\n})\n\nexport const { addList, removeList, addParticipant } = slice.actions\n\nexport default slice.reducer\n\n// TODO: à quoi sert la classe ?\n// export class ListReducers {}\n","import { combineReducers, createSelector } from '@reduxjs/toolkit'\nimport { createSelectorHook } from 'react-redux'\nimport listsReducers from './listsReducers'\n\nconst rootReducer = combineReducers({\n  listsReducers,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport const useTypedSelector = createSelectorHook<RootState>()\n\nexport default rootReducer\n","import { rem, size } from 'polished'\nimport { css } from '@emotion/react'\n\nexport const lists = css({\n  listStyleType: 'none',\n  padding: rem(0),\n  margin: rem(0),\n})\n\nexport const listItem = css({\n  fontSize: rem(17),\n  color: '#424242',\n  fontWeight: 500,\n  margin: `0 auto ${rem(8)}`,\n  display: 'flex',\n  justifyContent: 'space-between',\n  backgroundColor: '#FFFFFF',\n  borderRadius: rem(4),\n  height: '100%',\n  padding: rem(24),\n  width: rem(630),\n})\n\nexport const listLink = css({\n  backgroundColor: 'transparent',\n  border: 'none',\n  fontSize: rem(17),\n  color: '#424242',\n  fontWeight: 300,\n  textDecoration: 'none',\n  ':hover': {\n    color: '#484ED9',\n    fontWeight: 500,\n  },\n})\n\nexport const buttonLink = css({\n  fontSize: rem(15),\n  color: '#ebebeb',\n  fontWeight: 300,\n  textDecoration: 'none',\n  backgroundColor: 'transparent',\n  border: 'none',\n  ':hover': {\n    color: 'red',\n  },\n})\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react'\nimport React, { FC, Fragment } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { IList } from '../../interface/list'\nimport * as styles from './styles'\n\nconst ListItem: FC<IList> = (list: IList) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { name, amount, participants, id } = list\n\n  const openList = () => {\n    history.push(`/${name}/${id}`) // crée la route + redirige\n  }\n\n  return (\n    <Fragment>\n      <button css={styles.listLink} type=\"button\" onClick={openList}>\n        {name}\n      </button>\n      <div>{amount}</div>\n      <div>{participants.length}</div>\n    </Fragment>\n  )\n}\n\nexport default ListItem\n","import { IList } from '../interface/list'\nimport { RootState } from '../redux/reducers/rootReducers'\n\nexport const selectLists = (state: RootState): IList[] => state.listsReducers.lists\nconsole.log('selectLists')\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react'\nimport React, { Fragment, useState, VFC } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState, useTypedSelector } from '../../redux/reducers/rootReducers'\nimport * as styles from './styles'\nimport { removeList } from '../../redux/reducers/listsReducers'\nimport ListItem from './ListItem'\nimport { selectLists } from '../../selectors/listsSelector'\n\nconst Lists: VFC = () => {\n  const dispatch = useDispatch()\n\n  const lists = useTypedSelector(selectLists)\n  console.log('lists', lists)\n  const deleteList = (id: number) => {\n    dispatch(removeList(id))\n  }\n\n  return (\n    <Fragment>\n      <ul css={styles.lists}>\n        {lists.map((list) => (\n          <li css={styles.listItem} key={list.name}>\n            <ListItem {...list} />\n            <button css={styles.buttonLink} onClick={(e) => deleteList(list.id)} type=\"button\">\n              Supprimer\n            </button>\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  )\n}\n\nexport default Lists\n","import {rem, size} from 'polished'\nimport {css} from '@emotion/react'\n\nexport const listOfLists = css({\n    backgroundColor: '#FFFFFF',\n    borderRadius: rem(4),\n    margin: `${rem(20)} auto`,\n    height: '100%',\n    padding: rem(24),\n    width: rem(630),\n})\n\nexport const addListTitle = css ({\n    fontSize: rem(17),\n    color: '#424242',\n    fontFamily: 'Roboto',\n    fontWeight: 500,\n    marginBottom: rem(16),\n})\n\nexport const addListInput = css ({\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n})\n\nexport const listNameInput = css ({\n    height: rem(42),\n    borderRadius: rem(4),\n    border: `${rem(1)} solid #ebebeb`,\n    paddingLeft: rem(16),\n    width: '100%',\n    marginRight: rem(24),\n    fontSize: rem(17),\n    '::placeholder': {\n        color: '#ebebeb',\n    }\n})\n\nexport const addButton = css ({\n    height: rem(38),\n    width: rem(42),\n    borderRadius: '100%',\n    backgroundColor: '#484ED9',\n    borderColor: 'transparent',\n    color: '#ffffff',\n    fontSize: rem(24),\n    fontWeight: 600,\n})\n\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react'\nimport React, { ChangeEvent, Fragment, useState, VFC } from 'react'\nimport { useDispatch } from 'react-redux'\nimport * as styles from './styles'\nimport { addList } from '../../redux/reducers/listsReducers'\nimport { selectLists } from '../../selectors/listsSelector'\nimport { useTypedSelector } from '../../redux/reducers/rootReducers'\n\nconst InputAddNewList: VFC = () => {\n  const dispatch = useDispatch()\n  const listsLength = useTypedSelector(selectLists).length\n  const [listTitle, setListTitle] = useState('')\n\n  console.log('length', listsLength)\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => setListTitle(e.target.value)\n  const addNewList = () => {\n    setListTitle('')\n    dispatch(\n      addList({\n        id: Math.floor(Math.random() * 100),\n        name: listTitle,\n        amount: 0,\n        participants: [],\n        isSelected: false,\n      })\n    )\n  }\n\n  return (\n    <Fragment>\n      <div css={styles.listOfLists}>\n        <div css={styles.addListTitle}>Create a bill resume to split </div>\n        <div css={styles.addListInput}>\n          <input\n            aria-label=\"add-list\"\n            value={listTitle}\n            onChange={handleOnChange}\n            css={styles.listNameInput}\n            placeholder=\"List name\"\n          />\n          <button css={styles.addButton} onClick={addNewList} type=\"button\">\n            +\n          </button>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default InputAddNewList\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react'\nimport React, { Fragment } from 'react'\nimport * as styles from './styles'\n\nimport Lists from './lists/Lists'\nimport { section } from './styles'\nimport InputAddNewList from './input-add-new-list/InputAddNewList'\n\nconst Home: React.FC = () => (\n  <Fragment>\n    <section css={styles.header}>\n      <div css={styles.title}>Split Calculator</div>\n      <div css={styles.subtitle}>Good accounts make good friends</div>\n    </section>\n    <section css={styles.section}>\n      <InputAddNewList />\n      <Lists />\n    </section>\n  </Fragment>\n)\n\nexport default Home\n","import { rem, size } from 'polished'\nimport { css } from '@emotion/react'\n\nexport const participantsSection = css({\n  padding: rem(16),\n  backgroundColor: '#FFF',\n  borderRadius: rem(4),\n})\n\nexport const participantInput = css({\n  height: rem(42),\n  borderRadius: rem(4),\n  border: `${rem(1)} solid #ebebeb`,\n  paddingLeft: rem(16),\n  width: '100%',\n  marginRight: rem(24),\n  fontSize: rem(17),\n  '::placeholder': {\n    color: '#ebebeb',\n  },\n})\n\nexport const title = css({\n  fontSize: rem(88),\n  color: '#424242',\n  fontWeight: 800,\n  marginBottom: rem(16),\n  fontFamily: 'Lexend',\n})\n\nexport const backButton = css({\n  fontSize: rem(15),\n  color: '#424242',\n  fontWeight: 300,\n  textDecoration: 'none',\n  backgroundColor: 'transparent',\n  border: 'none',\n  ':hover': {\n    color: '#484ED9',\n  },\n})\n\nexport const addButton = css({\n  height: rem(38),\n  width: rem(42),\n  borderRadius: '100%',\n  backgroundColor: '#484ED9',\n  borderColor: 'transparent',\n  color: '#ffffff',\n  fontSize: rem(24),\n  fontWeight: 600,\n})\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react'\nimport React, { ChangeEvent, FC, Fragment, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useCurrentListInfo } from '../../hooks/useCurrentListInfo'\nimport { addParticipant } from '../../redux/reducers/listsReducers'\n\nimport * as styles from './styles'\nimport { useTypedSelector } from '../../redux/reducers/rootReducers'\nimport { selectListParticipants } from '../../selectors/participantsSelector'\nimport { selectLists } from '../../selectors/listsSelector'\n\nexport const PageDetailsList: FC = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { id } = useParams<{ id: string }>() // id renvoyé par l'url\n\n  const [newParticipant, setNewParticipant] = useState('')\n\n  const currentList = useCurrentListInfo(Number(id))\n  console.log('currentList', currentList)\n  if (!currentList) return null // page 404\n  const { participants, name } = currentList\n\n  console.log('participant from current', participants)\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => setNewParticipant(e.target.value)\n\n  const addNewParticipants = () => {\n    setNewParticipant('')\n    dispatch(\n      addParticipant({ ...currentList, participants: participants.concat([newParticipant]) })\n    )\n  }\n\n  const teeest = participants.join(', ')\n\n  return (\n    <Fragment>\n      <div css={styles.title}>{name}</div>\n      <button css={styles.backButton} type=\"button\" onClick={(e) => history.goBack()}>\n        Back\n      </button>\n      <section>\n        <div css={styles.participantsSection}>\n          <input\n            aria-label=\"add-participants\"\n            value={newParticipant}\n            onChange={handleOnChange}\n            css={styles.participantInput}\n            placeholder=\"Participant\"\n          />\n          <button css={styles.addButton} onClick={addNewParticipants} type=\"button\">\n            +\n          </button>\n        </div>\n      </section>\n      {teeest}\n    </Fragment>\n  )\n}\n","import { selectLists } from '../selectors/listsSelector'\nimport { useTypedSelector } from '../redux/reducers/rootReducers'\n\nexport const useCurrentListInfo = (targetId: number) => {\n  console.log('useCurrent func')\n  const lists = useTypedSelector(selectLists)\n  return lists.find((list) => list.id === targetId)\n}\n","import React from 'react'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { Store } from '@reduxjs/toolkit'\nimport Home from './components/Home'\nimport { PageDetailsList } from './components/page-details-list/PageDetailsList'\n\nexport interface IAppProps {\n  store: Store\n}\n\nconst App: React.FC<IAppProps> = ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <React.Fragment>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/:name/:id\">\n            <PageDetailsList />\n          </Route>\n        </Switch>\n      </React.Fragment>\n    </Router>\n  </Provider>\n)\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureAppStore from './configureStore'\n\nconst store = configureAppStore();\n\nReactDOM.render(\n      <App store={store}/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import {\n    configureStore,\n    EnhancedStore,\n    getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\n\nimport rootReducers from \"./redux/reducers/rootReducers\"\n\nexport default function configureAppStore(): EnhancedStore {\n    return configureStore({\n        reducer: rootReducers,\n        middleware: getDefaultMiddleware(),\n    });\n}\n"],"sourceRoot":""}